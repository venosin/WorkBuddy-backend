{
  "openapi": "3.0.0",
  "info": {
    "title": "Workbuddy",
    "description": "Documentación de la API para gestionamiento",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/notone/WorkBuddy/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "paths": {
    "/clientes": {
      "get": {
        "tags": [
          "Clientes"
        ],
        "summary": "Obtener todos los clientes",
        "responses": {
          "200": {
            "description": "Clientes obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cliente"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      },
      "post": {
        "tags": [
          "Clientes"
        ],
        "summary": "Crear un nuevo cliente",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClienteInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cliente creado exitosamente"
          },
          "400": {
            "description": "Correo electrónico ya registrado"
          }
        }
      }
    },
    "/clientes/{id}": {
      "get": {
        "tags": [
          "Clientes"
        ],
        "summary": "Obtener un cliente por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cliente"
                }
              }
            }
          },
          "400": {
            "description": "ID inválido o no encontrado"
          }
        }
      },
      "put": {
        "tags": [
          "Clientes"
        ],
        "summary": "Actualizar un cliente por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClienteInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cliente actualizado exitosamente"
          },
          "400": {
            "description": "Datos inválidos o cliente no encontrado"
          }
        }
      },
      "delete": {
        "tags": [
          "Clientes"
        ],
        "summary": "Eliminar un cliente por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente eliminado exitosamente"
          },
          "400": {
            "description": "Cliente no encontrado"
          }
        }
      }
    },
    "/discountCodes": {
      "get": {
        "tags": [
          "DiscountCodes"
        ],
        "summary": "Obtener todos los códigos de descuento",
        "responses": {
          "200": {
            "description": "Lista de códigos obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountCode"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      },
      "post": {
        "tags": [
          "DiscountCodes"
        ],
        "summary": "Crear un nuevo código de descuento",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountCodeInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Código de descuento creado exitosamente"
          },
          "400": {
            "description": "Datos inválidos al crear código"
          }
        }
      }
    },
    "/discountCodes/{id}": {
      "get": {
        "tags": [
          "DiscountCodes"
        ],
        "summary": "Obtener un código de descuento por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Código encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              }
            }
          },
          "400": {
            "description": "ID inválido o no encontrado"
          }
        }
      },
      "put": {
        "tags": [
          "DiscountCodes"
        ],
        "summary": "Actualizar un código de descuento por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountCodeInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Código actualizado exitosamente"
          },
          "400": {
            "description": "Datos inválidos o código no encontrado"
          }
        }
      },
      "delete": {
        "tags": [
          "DiscountCodes"
        ],
        "summary": "Eliminar un código de descuento por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Código eliminado exitosamente"
          },
          "400": {
            "description": "Código no encontrado"
          }
        }
      }
    },
    "/discountCodes/code/{code}": {
      "get": {
        "tags": [
          "DiscountCodes"
        ],
        "summary": "Obtener código de descuento por código",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Código encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountCode"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Código inválido o no encontrado"
          }
        }
      }
    },
    "/employees": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Obtener todos los empleados",
        "responses": {
          "200": {
            "description": "Empleados obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Crear un nuevo empleado",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Empleado creado exitosamente"
          },
          "400": {
            "description": "Correo electrónico ya está en uso"
          }
        }
      }
    },
    "/employees/{id}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Obtener un empleado por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Empleado encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "400": {
            "description": "ID inválido o empleado no encontrado"
          }
        }
      },
      "put": {
        "tags": [
          "Employees"
        ],
        "summary": "Actualizar un empleado por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Empleado actualizado exitosamente"
          },
          "400": {
            "description": "Datos inválidos o correo en uso"
          }
        }
      },
      "delete": {
        "tags": [
          "Employees"
        ],
        "summary": "Eliminar un empleado por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Empleado eliminado exitosamente"
          },
          "400": {
            "description": "Empleado no encontrado"
          }
        }
      }
    },
    "/favorites": {
      "get": {
        "tags": [
          "Favorites"
        ],
        "summary": "Obtener productos favoritos del usuario actual",
        "responses": {
          "200": {
            "description": "Lista de productos favoritos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Producto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/favorites/{productId}": {
      "post": {
        "tags": [
          "Favorites"
        ],
        "summary": "Agregar un producto a favoritos",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID del producto a agregar",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto agregado a favoritos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteActionResponse"
                }
              }
            }
          },
          "400": {
            "description": "El producto ya está en favoritos o datos inválidos"
          }
        }
      },
      "delete": {
        "tags": [
          "Favorites"
        ],
        "summary": "Eliminar un producto de favoritos",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID del producto a eliminar",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto eliminado de favoritos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteActionResponse"
                }
              }
            }
          },
          "400": {
            "description": "El producto no estaba en favoritos o datos inválidos"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Iniciar sesión de cliente, empleado o admin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login exitoso, devuelve token JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Faltan campos o datos inválidos"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Cerrar sesión del usuario",
        "responses": {
          "200": {
            "description": "Logout exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error al cerrar sesión"
          }
        }
      }
    },
    "/offers": {
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Obtener todas las ofertas",
        "responses": {
          "200": {
            "description": "Ofertas obtenidas exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Offer"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      },
      "post": {
        "tags": [
          "Offers"
        ],
        "summary": "Crear una nueva oferta",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfferInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Oferta creada exitosamente"
          },
          "400": {
            "description": "Datos inválidos al crear la oferta"
          }
        }
      }
    },
    "/offers/{id}": {
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Obtener una oferta por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Oferta encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          },
          "400": {
            "description": "ID inválido o no encontrado"
          }
        }
      },
      "put": {
        "tags": [
          "Offers"
        ],
        "summary": "Actualizar una oferta por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfferInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Oferta actualizada exitosamente"
          },
          "400": {
            "description": "Datos inválidos al actualizar la oferta"
          }
        }
      },
      "delete": {
        "tags": [
          "Offers"
        ],
        "summary": "Eliminar una oferta por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Oferta eliminada exitosamente"
          },
          "400": {
            "description": "Oferta no encontrada o ID inválido"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Obtener todas las órdenes",
        "responses": {
          "200": {
            "description": "Órdenes obtenidas exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Crear una nueva orden",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Orden creada exitosamente"
          },
          "400": {
            "description": "Datos inválidos al crear la orden"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Obtener una orden por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orden encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "ID inválido o no encontrado"
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Actualizar estado de una orden por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orders_id_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Estado de la orden actualizado exitosamente"
          },
          "400": {
            "description": "Datos inválidos al actualizar la orden"
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Eliminar una orden por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orden eliminada exitosamente"
          },
          "400": {
            "description": "No se puede eliminar la orden"
          }
        }
      }
    },
    "/orders/user": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Obtener órdenes del usuario autenticado",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filtrar por estado de la orden",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Fecha mínima de creación (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Fecha máxima de creación (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Número de órdenes por página",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número de página",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Órdenes del usuario obtenidas exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Parámetros de consulta inválidos"
          }
        }
      }
    },
    "/orders/admin": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Crear una orden administrativa",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminOrderInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Orden administrativa creada exitosamente"
          },
          "400": {
            "description": "Datos inválidos al crear orden administrativa"
          }
        }
      }
    },
    "/passwordRecovery/requestCode": {
      "post": {
        "tags": [
          "PasswordRecovery"
        ],
        "summary": "Solicitar código de verificación para recuperación de contraseña",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Código de verificación enviado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Email es requerido o inválido"
          }
        }
      }
    },
    "/passwordRecovery/verifyCode": {
      "post": {
        "tags": [
          "PasswordRecovery"
        ],
        "summary": "Verificar el código de recuperación enviado por email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Código verificado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Código inválido o faltante"
          }
        }
      }
    },
    "/passwordRecovery/resetPassword": {
      "post": {
        "tags": [
          "PasswordRecovery"
        ],
        "summary": "Restablecer la contraseña usando el código verificado",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Contraseña actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Código no verificado o nueva contraseña faltante"
          }
        }
      }
    },
    "/payments/create": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Iniciar proceso de pago con PayPal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "URL de PayPal generada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Datos inválidos al crear pago"
          }
        }
      }
    },
    "/payments/capture": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Capturar el pago aprobado en PayPal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CapturePaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Pago capturado y orden actualizada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapturePaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Datos inválidos al capturar pago"
          }
        }
      }
    },
    "/payments/cancel": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Cancelar un pago en curso",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Pago cancelado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Datos inválidos al cancelar pago"
          }
        }
      }
    },
    "/payments/init": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Preparar orden para proceso de pago (admin/usuario)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitPaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Orden preparada para pago",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Datos inválidos al preparar orden"
          }
        }
      }
    },
    "/payments/status/{orderId}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Obtener estado del pago de una orden",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID de la orden",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estado del pago obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "ID inválido o no encontrado"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Obtener todos los productos",
        "responses": {
          "200": {
            "description": "Productos obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Crear un nuevo producto",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Producto creado exitosamente"
          },
          "400": {
            "description": "Datos inválidos al crear el producto"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Obtener un producto por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "ID inválido o no encontrado"
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Actualizar un producto por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Producto actualizado exitosamente"
          },
          "400": {
            "description": "Datos inválidos al actualizar el producto"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Eliminar un producto por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto eliminado exitosamente"
          },
          "400": {
            "description": "ID inválido o no encontrado"
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Obtener perfil del usuario actual",
        "responses": {
          "200": {
            "description": "Perfil obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "400": {
            "description": "Error al obtener perfil"
          }
        }
      },
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "Actualizar perfil del usuario actual",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Perfil actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Datos inválidos al actualizar perfil"
          }
        }
      }
    },
    "/profile/orders": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Obtener órdenes del usuario actual (Mis Pedidos)",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Órdenes obtenidas exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error al obtener órdenes"
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Registration"
        ],
        "summary": "Registrar un nuevo cliente y enviar código de verificación",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cliente registrado y token de verificación enviado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Faltan campos obligatorios o datos inválidos"
          }
        }
      }
    },
    "/register/verifyEmail": {
      "post": {
        "tags": [
          "Registration"
        ],
        "summary": "Verificar código de correo y activar cuenta",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Correo verificado exitosamente y sesión iniciada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyEmailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Código inválido o token de verificación faltante"
          }
        }
      }
    },
    "/registerEmployee": {
      "post": {
        "tags": [
          "RegistrationEmployee"
        ],
        "summary": "Registrar un nuevo empleado y generar token de autenticación",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterEmployeeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Empleado registrado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterEmployeeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Datos inválidos o el correo ya está en uso"
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Obtener todas las reseñas",
        "responses": {
          "200": {
            "description": "Reseñas obtenidas exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      },
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Crear una nueva reseña",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Reseña creada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "400": {
            "description": "Datos inválidos al crear reseña"
          }
        }
      }
    },
    "/reviews/{id}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Obtener reseña por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reseña encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "400": {
            "description": "ID inválido o reseña no encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "Reviews"
        ],
        "summary": "Actualizar una reseña por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Reseña actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "400": {
            "description": "Datos inválidos al actualizar reseña"
          }
        }
      },
      "delete": {
        "tags": [
          "Reviews"
        ],
        "summary": "Eliminar una reseña por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reseña eliminada exitosamente"
          },
          "400": {
            "description": "ID inválido o reseña no encontrada"
          }
        }
      }
    },
    "/reviews/product/{productId}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Obtener reseñas de un producto",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID del producto",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reseñas del producto obtenidas exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              }
            }
          },
          "400": {
            "description": "ID de producto inválido"
          }
        }
      }
    },
    "/shopping-carts": {
      "get": {
        "tags": [
          "ShoppingCarts"
        ],
        "summary": "Obtener todos los carritos",
        "responses": {
          "200": {
            "description": "Lista de carritos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShoppingCart"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ShoppingCarts"
        ],
        "summary": "Crear un nuevo carrito",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingCartInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Carrito creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingCart"
                }
              }
            }
          }
        }
      }
    },
    "/shopping-carts/{id}": {
      "get": {
        "tags": [
          "ShoppingCarts"
        ],
        "summary": "Obtener un carrito por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Carrito encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingCart"
                }
              }
            }
          },
          "404": {
            "description": "Carrito no encontrado"
          }
        }
      },
      "put": {
        "tags": [
          "ShoppingCarts"
        ],
        "summary": "Actualizar un carrito",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingCartInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Carrito actualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingCart"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShoppingCarts"
        ],
        "summary": "Eliminar un carrito",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Carrito eliminado"
          }
        }
      }
    },
    "/shopping-carts/{id}/add-product": {
      "post": {
        "tags": [
          "ShoppingCarts"
        ],
        "summary": "Agregar producto al carrito",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/id_addproduct_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Producto agregado al carrito"
          }
        }
      }
    },
    "/shopping-carts/{id}/remove-product": {
      "post": {
        "tags": [
          "ShoppingCarts"
        ],
        "summary": "Remover producto del carrito",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/id_removeproduct_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Producto eliminado del carrito"
          }
        }
      }
    },
    "/user-settings": {
      "get": {
        "tags": [
          "UserSettings"
        ],
        "summary": "Obtener la configuración completa del usuario",
        "responses": {
          "200": {
            "description": "Configuración obtenida con éxito",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettings"
                }
              }
            }
          }
        }
      }
    },
    "/user-settings/preferences": {
      "put": {
        "tags": [
          "UserSettings"
        ],
        "summary": "Actualizar preferencias del usuario",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreferencesInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Preferencias actualizadas con éxito",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Preferences"
                }
              }
            }
          }
        }
      }
    },
    "/user-settings/addresses": {
      "get": {
        "tags": [
          "UserSettings"
        ],
        "summary": "Obtener todas las direcciones del usuario",
        "responses": {
          "200": {
            "description": "Lista de direcciones",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserSettings"
        ],
        "summary": "Agregar una nueva dirección",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Dirección agregada con éxito",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        }
      }
    },
    "/user-settings/addresses/{addressId}": {
      "put": {
        "tags": [
          "UserSettings"
        ],
        "summary": "Actualizar una dirección existente",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Dirección actualizada con éxito",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserSettings"
        ],
        "summary": "Eliminar una dirección del usuario",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dirección eliminada con éxito"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Cliente": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "64b1234567abc"
          },
          "name": {
            "type": "string",
            "example": "Juan Pérez"
          },
          "phoneNumber": {
            "type": "string",
            "example": 50377778888
          },
          "email": {
            "type": "string",
            "example": "juan@example.com"
          },
          "address": {
            "type": "string",
            "example": "Calle principal #123"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "example": "1995-04-23"
          },
          "isVerified": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ClienteInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Juan Pérez"
          },
          "phoneNumber": {
            "type": "string",
            "example": 50377778888
          },
          "email": {
            "type": "string",
            "example": "juan@example.com"
          },
          "password": {
            "type": "string",
            "example": "MiContrasenaSegura123"
          },
          "address": {
            "type": "string",
            "example": "Calle principal #123"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "example": "1995-04-23"
          },
          "isVerified": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "DiscountCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "64b123abcde456"
          },
          "clientsId": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountCode_clientsId"
            }
          },
          "code": {
            "type": "string",
            "example": "DESC10"
          },
          "percentage": {
            "type": "number",
            "example": 10
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "DiscountCodeInput": {
        "type": "object",
        "properties": {
          "clientsId": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountCode_clientsId"
            }
          },
          "code": {
            "type": "string",
            "example": "DESC10"
          },
          "percentage": {
            "type": "number",
            "example": 10
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "64b321fedcba987"
          },
          "name": {
            "type": "string",
            "example": "María López"
          },
          "phoneNumber": {
            "type": "string",
            "example": "77776655"
          },
          "email": {
            "type": "string",
            "example": "maria.lopez@example.com"
          },
          "hiringDate": {
            "type": "string",
            "format": "date",
            "example": "2024-06-15"
          },
          "dui": {
            "type": "string",
            "example": "01234567-8"
          },
          "Isss": {
            "type": "string",
            "example": "1234567890"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EmployeeInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "María López"
          },
          "phoneNumber": {
            "type": "string",
            "example": "77776655"
          },
          "email": {
            "type": "string",
            "example": "maria.lopez@example.com"
          },
          "password": {
            "type": "string",
            "example": "OtraContrasenaSegura123"
          },
          "hiringDate": {
            "type": "string",
            "format": "date",
            "example": "2024-06-15"
          },
          "dui": {
            "type": "string",
            "example": "01234567-8"
          },
          "Isss": {
            "type": "string",
            "example": "1234567890"
          }
        }
      },
      "FavoriteActionResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Producto agregado a favoritos"
          },
          "productId": {
            "type": "string",
            "example": "64cde89f0123ab"
          }
        }
      },
      "LoginRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "usuario@example.com"
          },
          "password": {
            "type": "string",
            "example": "MiContrasena123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "clients login successful"
          },
          "token": {
            "type": "string",
            "description": "Token JWT para autenticación",
            "example": "eyJhbGciOiJIUzI1NiIsInR..."
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Logged out successfully"
          }
        }
      },
      "Offer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "64cdef12345ab678"
          },
          "productId": {
            "type": "string",
            "example": "64abc12345de6789"
          },
          "discountType": {
            "type": "string",
            "example": "percentage",
            "enum": [
              "percentage",
              "fixed_value"
            ]
          },
          "percentage": {
            "type": "number",
            "example": 20
          },
          "value": {
            "type": "number",
            "example": 5
          },
          "from": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-01T00:00:00Z"
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-30T23:59:59Z"
          },
          "state": {
            "type": "string",
            "example": "scheduled",
            "enum": [
              "active",
              "inactive",
              "scheduled",
              "expired"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OfferInput": {
        "required": [
          "discountType",
          "from",
          "productId",
          "state",
          "to"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "example": "64abc12345de6789"
          },
          "discountType": {
            "type": "string",
            "example": "fixed_value",
            "enum": [
              "percentage",
              "fixed_value"
            ]
          },
          "percentage": {
            "type": "number",
            "example": 15
          },
          "value": {
            "type": "number",
            "example": 2
          },
          "from": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-01T00:00:00Z"
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-30T23:59:59Z"
          },
          "state": {
            "type": "string",
            "example": "active",
            "enum": [
              "active",
              "inactive",
              "scheduled",
              "expired"
            ]
          }
        }
      },
      "ShippingAddress": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          }
        }
      },
      "PaymentInfo": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "paypal",
              "credit_card",
              "debit_card",
              "efectivo",
              "transfer"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "failed",
              "refunded"
            ]
          },
          "transactionId": {
            "type": "string",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "CartId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "enum": [
              "clients",
              "employees"
            ]
          },
          "paymentInfo": {
            "$ref": "#/components/schemas/PaymentInfo"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/ShippingAddress"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "paid",
              "processing",
              "shipped",
              "delivered",
              "cancelled"
            ]
          },
          "totalAmount": {
            "type": "number"
          },
          "notificationSent": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrderInput": {
        "required": [
          "CartId",
          "paymentInfo",
          "shippingAddress",
          "totalAmount"
        ],
        "type": "object",
        "properties": {
          "CartId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "enum": [
              "clients",
              "employees"
            ]
          },
          "paymentInfo": {
            "$ref": "#/components/schemas/PaymentInfo"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/ShippingAddress"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "paid",
              "processing",
              "shipped",
              "delivered",
              "cancelled"
            ]
          },
          "totalAmount": {
            "type": "number"
          }
        }
      },
      "AdminOrderInput": {
        "required": [
          "payMethod",
          "products",
          "shippingAddress",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "enum": [
              "clients",
              "employees"
            ]
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminOrderInput_products"
            }
          },
          "payMethod": {
            "type": "string"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/ShippingAddress"
          }
        }
      },
      "RequestCodeRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "usuario@example.com"
          }
        }
      },
      "RequestCodeResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Verification code sent to email"
          }
        }
      },
      "VerifyCodeRequest": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "123456"
          }
        }
      },
      "VerifyCodeResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Code verified successfully"
          }
        }
      },
      "ResetPasswordRequest": {
        "required": [
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "newPassword": {
            "type": "string",
            "example": "NuevaContrasena123"
          }
        }
      },
      "ResetPasswordResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Password updated successfully"
          }
        }
      },
      "CreatePaymentRequest": {
        "required": [
          "orderId"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "example": "64d123abcde456f"
          }
        }
      },
      "CreatePaymentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "5O190127TN364715T"
          },
          "approveUrl": {
            "type": "string",
            "example": "https://www.paypal.com/checkoutnow?token=5O190127TN364715T"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "CapturePaymentRequest": {
        "required": [
          "orderId",
          "paypalOrderId"
        ],
        "type": "object",
        "properties": {
          "paypalOrderId": {
            "type": "string",
            "example": "5O190127TN364715T"
          },
          "orderId": {
            "type": "string",
            "example": "64d123abcde456f"
          }
        }
      },
      "CapturePaymentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "COMPLETED"
          },
          "orderId": {
            "type": "string",
            "example": "64d123abcde456f"
          },
          "message": {
            "type": "string",
            "example": "Pago completado con éxito"
          }
        }
      },
      "CancelPaymentRequest": {
        "required": [
          "orderId"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "example": "64d123abcde456f"
          }
        }
      },
      "CancelPaymentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "cancelled"
          },
          "orderId": {
            "type": "string",
            "example": "64d123abcde456f"
          },
          "message": {
            "type": "string",
            "example": "Pago cancelado"
          }
        }
      },
      "InitPaymentRequest": {
        "required": [
          "orderId"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "example": "64d123abcde456f"
          }
        }
      },
      "InitPaymentResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Orden preparada para pago"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          }
        }
      },
      "PaymentStatusResponse": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "example": "64d123abcde456f"
          },
          "status": {
            "type": "string",
            "example": "paid"
          },
          "paymentStatus": {
            "type": "string",
            "example": "completed"
          },
          "paymentMethod": {
            "type": "string",
            "example": "paypal"
          },
          "transactionId": {
            "type": "string",
            "example": "5O190127TN364715T"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-10T14:30:00Z"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "64e123abcde45678"
          },
          "name": {
            "type": "string",
            "example": "Teclado mecánico"
          },
          "description": {
            "type": "string",
            "example": "Teclado mecánico con switches azules"
          },
          "category": {
            "type": "string",
            "example": "Periféricos"
          },
          "price": {
            "type": "number",
            "example": 49.99
          },
          "stock": {
            "type": "integer",
            "example": 100
          },
          "imagery": {
            "$ref": "#/components/schemas/Product_imagery"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProductInput": {
        "required": [
          "category",
          "description",
          "imagery",
          "name",
          "price",
          "stock"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Teclado mecánico"
          },
          "description": {
            "type": "string",
            "example": "Teclado mecánico con switches azules"
          },
          "category": {
            "type": "string",
            "example": "Periféricos"
          },
          "price": {
            "type": "number",
            "example": 49.99
          },
          "stock": {
            "type": "integer",
            "example": 100
          },
          "imagery": {
            "$ref": "#/components/schemas/Product_imagery"
          }
        }
      },
      "Profile": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64f123abcde45678"
          },
          "name": {
            "type": "string",
            "example": "Juan Pérez"
          },
          "phoneNumber": {
            "type": "string",
            "example": 50377778888
          },
          "email": {
            "type": "string",
            "example": "juan@example.com"
          },
          "address": {
            "type": "string",
            "example": "Calle Principal #123"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "example": "1995-04-23"
          },
          "isVerified": {
            "type": "boolean",
            "example": true
          },
          "profileImage": {
            "$ref": "#/components/schemas/Profile_profileImage"
          }
        }
      },
      "ProfileUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Juan Pérez"
          },
          "phoneNumber": {
            "type": "string",
            "example": 50377778888
          },
          "address": {
            "type": "string",
            "example": "Calle Principal #123"
          }
        }
      },
      "ProfileUpdateResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Perfil actualizado con éxito"
          },
          "user": {
            "$ref": "#/components/schemas/Profile"
          }
        }
      },
      "RegisterRequest": {
        "required": [
          "address",
          "birthday",
          "email",
          "isVerified",
          "name",
          "password",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Juan Pérez"
          },
          "phoneNumber": {
            "type": "string",
            "example": 50377778888
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "juan@example.com"
          },
          "password": {
            "type": "string",
            "example": "MiContrasenaSegura123"
          },
          "address": {
            "type": "string",
            "example": "Calle principal #123"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "example": "1995-04-23"
          },
          "isVerified": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Cliente registrado. Por favor verifica tu correo con el código enviado."
          },
          "token": {
            "type": "string",
            "description": "Token JWT para verificación de correo",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "VerifyEmailRequest": {
        "required": [
          "verificationCode"
        ],
        "type": "object",
        "properties": {
          "verificationCode": {
            "type": "string",
            "example": "a1b2c3"
          }
        }
      },
      "VerifyEmailResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Correo verificado exitosamente. Has iniciado sesión automáticamente"
          },
          "token": {
            "type": "string",
            "description": "Token JWT de autenticación",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "client": {
            "$ref": "#/components/schemas/VerifyEmailResponse_client"
          }
        }
      },
      "RegisterEmployeeRequest": {
        "required": [
          "Isss",
          "dui",
          "email",
          "hiringDate",
          "name",
          "password",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "María López"
          },
          "phoneNumber": {
            "type": "string",
            "example": "77776655"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "maria.lopez@example.com"
          },
          "password": {
            "type": "string",
            "example": "ContrasenaSegura123"
          },
          "hiringDate": {
            "type": "string",
            "format": "date",
            "example": "2025-01-15"
          },
          "dui": {
            "type": "string",
            "example": "01234567-8"
          },
          "Isss": {
            "type": "string",
            "example": "1234567890"
          }
        }
      },
      "RegisterEmployeeResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Employee register"
          },
          "token": {
            "type": "string",
            "description": "Token JWT para autenticación",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "Review": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "64f456abcde78901"
          },
          "clientId": {
            "type": "string",
            "example": "64b1234567abc"
          },
          "productId": {
            "type": "string",
            "example": "64e123abcde45678"
          },
          "score": {
            "type": "integer",
            "example": 5
          },
          "comment": {
            "type": "string",
            "example": "Excelente producto, muy buena calidad."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ReviewInput": {
        "required": [
          "clientId",
          "comment",
          "productId",
          "score"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "example": "64b1234567abc"
          },
          "productId": {
            "type": "string",
            "example": "64e123abcde45678"
          },
          "score": {
            "maximum": 5,
            "minimum": 1,
            "type": "integer",
            "example": 4
          },
          "comment": {
            "type": "string",
            "example": "Buen producto, llego a tiempo."
          }
        }
      },
      "ShoppingCart": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "clienteId": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShoppingCart_products"
            }
          },
          "discountCodesId": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "number"
          },
          "state": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "ShoppingCartInput": {
        "required": [
          "clienteId",
          "products",
          "state",
          "total"
        ],
        "type": "object",
        "properties": {
          "clienteId": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/id_addproduct_body"
            }
          },
          "discountCodesId": {
            "type": "string"
          },
          "total": {
            "type": "number"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "UserSettings": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "enum": [
              "clients",
              "employees",
              "admin"
            ]
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "preferences": {
            "$ref": "#/components/schemas/Preferences"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Preferences": {
        "type": "object",
        "properties": {
          "notifications": {
            "$ref": "#/components/schemas/Preferences_notifications"
          },
          "privacy": {
            "$ref": "#/components/schemas/Preferences_privacy"
          }
        }
      },
      "PreferencesInput": {
        "type": "object",
        "properties": {
          "notifications": {
            "$ref": "#/components/schemas/Preferences_notifications"
          },
          "privacy": {
            "$ref": "#/components/schemas/Preferences_privacy"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          }
        }
      },
      "AddressInput": {
        "required": [
          "city",
          "postalCode",
          "state",
          "street",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          }
        }
      },
      "orders_id_body": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "shipped",
            "enum": [
              "pending",
              "paid",
              "processing",
              "shipped",
              "delivered",
              "cancelled"
            ]
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            }
          },
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "pages": {
            "type": "integer"
          }
        }
      },
      "id_addproduct_body": {
        "required": [
          "idProduct",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "idProduct": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          }
        }
      },
      "id_removeproduct_body": {
        "required": [
          "idProduct"
        ],
        "type": "object",
        "properties": {
          "idProduct": {
            "type": "string"
          }
        }
      },
      "DiscountCode_clientsId": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "example": "64a987clientid123"
          }
        }
      },
      "AdminOrderInput_products": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          }
        }
      },
      "Product_imagery": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://res.cloudinary.com/demo/image/upload/v123456/key.jpg"
          },
          "public_id": {
            "type": "string",
            "example": "workbuddy/productos/key"
          },
          "filename": {
            "type": "string",
            "example": "teclado.jpg"
          }
        }
      },
      "Profile_profileImage": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://res.cloudinary.com/demo/image/upload/v123/profile.jpg"
          },
          "public_id": {
            "type": "string",
            "example": "workbuddy/clients_profiles/abc123"
          },
          "filename": {
            "type": "string",
            "example": "perfil.jpg"
          }
        },
        "nullable": true
      },
      "VerifyEmailResponse_client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "64b1234567abc"
          },
          "name": {
            "type": "string",
            "example": "Juan Pérez"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "juan@example.com"
          }
        }
      },
      "ShoppingCart_products": {
        "type": "object",
        "properties": {
          "idProduct": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          }
        }
      },
      "Preferences_notifications": {
        "type": "object",
        "properties": {
          "email": {
            "type": "boolean"
          },
          "promotions": {
            "type": "boolean"
          },
          "orderUpdates": {
            "type": "boolean"
          }
        }
      },
      "Preferences_privacy": {
        "type": "object",
        "properties": {
          "shareProfileData": {
            "type": "boolean"
          }
        }
      }
    }
  }
}